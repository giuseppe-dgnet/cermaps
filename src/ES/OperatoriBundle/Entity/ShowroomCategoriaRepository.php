<?php

namespace ES\OperatoriBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ShowroomCategoriaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ShowroomCategoriaRepository extends EntityRepository {

    public function ricercaDaDati($std_cat) {
        $em = $this->getEntityManager();
        
        $_cat = $em->getRepository('ESOperatoriBundle:Categoria');
        $cat = null;
        $categ = explode(' ', $std_cat->SiglaCategoria);
        if($std_cat->SiglaCategoria) {
            $cat = $_cat->findOneBy(array('sigla' => $categ[0]));
        }
        if(!$cat) {
            $cat = new Categoria();
            $cat->setSigla($std_cat->SiglaCategoria);
            $em->persist($cat);
            $em->flush();
        }
        $_classe = $em->getRepository('ESOperatoriBundle:ClasseCategoria');
        $classe = null;
        if($std_cat->Classe) {
            $classe = $_classe->findOneBy(array('classe' => $std_cat->Classe, 'categoria' => $cat->getId()));
        }
        if(!$classe && $std_cat->Classe) {
            $classe = new ClasseCategoria();
            $classe->setClasse($std_cat->Classe);
            $classe->setCategoria($cat);
            $em->persist($classe);
            $em->flush();
        }
        $categoria = new ShowroomCategoria();
        $categoria->setCategoria($cat);
        $categoria->setClasse($classe);
        $categoria->setSospesa(count($categ) > 1);
        $categoria->setTipoIscrizione($std_cat->TipoIscrizione);
        $categoria->setSottocategoria($std_cat->SottoCategoria);
        if($std_cat->DataScadenza) {
            $categoria->setScadenzaAt(\DateTime::createFromFormat('d/m/Y', $std_cat->DataScadenza));
        }
        return $categoria;
    }

}
